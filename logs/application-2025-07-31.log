2025-07-31 09:31:04 INFO  o.h.validator.internal.util.Version [21] - HV000001: Hibernate Validator 8.0.1.Final
2025-07-31 09:31:04 INFO  c.m.MarciComentariosFacebookApplication [53] - Starting MarciComentariosFacebookApplication using Java 17.0.11 with PID 31428 (C:\Users\davic\OneDrive\Escritorio\PROYECTOS\TWS2\MARCIMEX\marci-comentarios-facebook\target\classes started by davic in C:\Users\davic\OneDrive\Escritorio\PROYECTOS\TWS2\MARCIMEX\marci-comentarios-facebook)
2025-07-31 09:31:04 INFO  c.m.MarciComentariosFacebookApplication [652] - No active profile set, falling back to 1 default profile: "default"
2025-07-31 09:31:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate [145] - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-07-31 09:31:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate [213] - Finished Spring Data repository scanning in 23 ms. Found 0 R2DBC repository interfaces.
2025-07-31 09:31:06 INFO  c.m.controllers.WebhookController [37] - ⏳ Suscribiendo a la página [1699940356976238] al webhook: https://graph.facebook.com/v23.0/1699940356976238/subscribed_apps?subscribed_fields=feed&access_token=EAAGjgTK34ZB0BPGxM71OlIRZBTdsRD0MRdSK5JaxlvUzeBFZA1PzZCHQ4Dbf7HmvIfzKLW0DixoIaC0QXZAfZBZCWbqqnyGQeds8WkoYEvMwq9QQhhOphyVsWyOTxnjTHINGNvwZBHmqhsfejauzZBgPuhKZAxReOV1F7HeDwQCtCACRGQttmwuZBZAnJJdA3tqeogwF5INMlMNr ...
2025-07-31 09:31:08 INFO  c.m.controllers.WebhookController [47] - ✅ Suscripción completada exitosamente para la página [1699940356976238]. Respuesta: {"success":true}
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42P07, MESSAGE=la relación «page» ya existe, FILE=heap.c, LINE=1202, ROUTINE=heap_create_with_catalog
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE page (
                      id TEXT PRIMARY KEY,
                      name TEXT,
                      category TEXT
)]
Caused by: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE page (
                      id TEXT PRIMARY KEY,
                      name TEXT,
                      category TEXT
)]
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:253)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: la relación «page» ya existe
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:86)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 40 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42P07, MESSAGE=la relación «post» ya existe, FILE=heap.c, LINE=1202, ROUTINE=heap_create_with_catalog
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE post (
                      id TEXT PRIMARY KEY,
                      message TEXT,
                      full_picture TEXT,
                      permalink_url TEXT,
                      created_time TEXT,
                      updated_time TEXT,
                      status_type TEXT,
                      is_published BOOLEAN,
                      page_id TEXT REFERENCES page(id) ON DELETE CASCADE
)]
Caused by: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE post (
                      id TEXT PRIMARY KEY,
                      message TEXT,
                      full_picture TEXT,
                      permalink_url TEXT,
                      created_time TEXT,
                      updated_time TEXT,
                      status_type TEXT,
                      is_published BOOLEAN,
                      page_id TEXT REFERENCES page(id) ON DELETE CASCADE
)]
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:253)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: la relación «post» ya existe
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:86)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42P07, MESSAGE=la relación «reaction» ya existe, FILE=heap.c, LINE=1202, ROUTINE=heap_create_with_catalog
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE reaction (
                          id TEXT PRIMARY KEY,
                          user_id TEXT,
                          user_name TEXT,
                          type TEXT,
                          verb TEXT,
                          comment_id TEXT,
                          post_id TEXT REFERENCES post(id) ON DELETE CASCADE
)]
Caused by: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE reaction (
                          id TEXT PRIMARY KEY,
                          user_id TEXT,
                          user_name TEXT,
                          type TEXT,
                          verb TEXT,
                          comment_id TEXT,
                          post_id TEXT REFERENCES post(id) ON DELETE CASCADE
)]
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:253)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: la relación «reaction» ya existe
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:86)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42P07, MESSAGE=la relación «fb_user» ya existe, FILE=heap.c, LINE=1202, ROUTINE=heap_create_with_catalog
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE fb_user (
                         id TEXT PRIMARY KEY,
                         name TEXT
)]
Caused by: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE fb_user (
                         id TEXT PRIMARY KEY,
                         name TEXT
)]
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:253)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: la relación «fb_user» ya existe
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:86)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42P07, MESSAGE=la relación «comment» ya existe, FILE=heap.c, LINE=1202, ROUTINE=heap_create_with_catalog
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE comment (
                         id TEXT PRIMARY KEY,
                         message TEXT,
                         created_time TIMESTAMP,
                         updated_time TIMESTAMP,
                         verb TEXT,
                         auto_replied BOOLEAN,
                         lhia_mind_user TEXT,
                         fb_user_id TEXT REFERENCES fb_user(id),
                         parent_id TEXT REFERENCES comment(id),
                         post_id TEXT REFERENCES post(id) ON DELETE CASCADE
)]
Caused by: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE comment (
                         id TEXT PRIMARY KEY,
                         message TEXT,
                         created_time TIMESTAMP,
                         updated_time TIMESTAMP,
                         verb TEXT,
                         auto_replied BOOLEAN,
                         lhia_mind_user TEXT,
                         fb_user_id TEXT REFERENCES fb_user(id),
                         parent_id TEXT REFERENCES comment(id),
                         post_id TEXT REFERENCES post(id) ON DELETE CASCADE
)]
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:253)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: la relación «comment» ya existe
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:86)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42P07, MESSAGE=la relación «attachment» ya existe, FILE=heap.c, LINE=1202, ROUTINE=heap_create_with_catalog
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE attachment (
                            id TEXT PRIMARY KEY,
                            media_type TEXT,
                            media_image TEXT,
                            media_source TEXT,
                            url TEXT,
                            create_time TEXT,
                            update_time TEXT,
                            verb TEXT,
                            message TEXT,
                            post_id TEXT REFERENCES post(id) ON DELETE CASCADE
)]
Caused by: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [CREATE TABLE attachment (
                            id TEXT PRIMARY KEY,
                            media_type TEXT,
                            media_image TEXT,
                            media_source TEXT,
                            url TEXT,
                            create_time TEXT,
                            update_time TEXT,
                            verb TEXT,
                            message TEXT,
                            post_id TEXT REFERENCES post(id) ON DELETE CASCADE
)]
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:253)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: la relación «attachment» ya existe
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:86)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «page_pkey», DETAIL=Ya existe la llave (id)=(763079420215588)., SCHEMA_NAME=public, TABLE_NAME=page, CONSTRAINT_NAME=page_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO page (id, name, category) VALUES ('763079420215588', 'Test - TWS2', 'Technology')]; llave duplicada viola restricción de unicidad «page_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO page (id, name, category) VALUES ('763079420215588', 'Test - TWS2', 'Technology')]; llave duplicada viola restricción de unicidad «page_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «page_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «page_pkey», DETAIL=Ya existe la llave (id)=(123456789012345)., SCHEMA_NAME=public, TABLE_NAME=page, CONSTRAINT_NAME=page_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO page (id, name, category) VALUES ('123456789012345', 'Demo Page', 'Education')]; llave duplicada viola restricción de unicidad «page_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO page (id, name, category) VALUES ('123456789012345', 'Demo Page', 'Education')]; llave duplicada viola restricción de unicidad «page_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «page_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «post_pkey», DETAIL=Ya existe la llave (id)=(763079420215588_111111111)., SCHEMA_NAME=public, TABLE_NAME=post, CONSTRAINT_NAME=post_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «fb_user_pkey», DETAIL=Ya existe la llave (id)=(9857935820998879)., SCHEMA_NAME=public, TABLE_NAME=fb_user, CONSTRAINT_NAME=fb_user_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO post (id, message, full_picture, permalink_url, created_time, updated_time, status_type, is_published, page_id) VALUES ('763079420215588_111111111', 'Primer post de prueba', 'https://img.com/pic1.jpg', 'https://facebook.com/post/1', '2025-07-22T20:00:00', '2025-07-22T20:10:00', 'shared_story', true, '763079420215588')]; llave duplicada viola restricción de unicidad «post_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO post (id, message, full_picture, permalink_url, created_time, updated_time, status_type, is_published, page_id) VALUES ('763079420215588_111111111', 'Primer post de prueba', 'https://img.com/pic1.jpg', 'https://facebook.com/post/1', '2025-07-22T20:00:00', '2025-07-22T20:10:00', 'shared_story', true, '763079420215588')]; llave duplicada viola restricción de unicidad «post_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «post_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO fb_user (id, name) VALUES ('9857935820998879', 'David Guambaña')]; llave duplicada viola restricción de unicidad «fb_user_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO fb_user (id, name) VALUES ('9857935820998879', 'David Guambaña')]; llave duplicada viola restricción de unicidad «fb_user_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «fb_user_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «fb_user_pkey», DETAIL=Ya existe la llave (id)=(1111222233334444)., SCHEMA_NAME=public, TABLE_NAME=fb_user, CONSTRAINT_NAME=fb_user_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO fb_user (id, name) VALUES ('1111222233334444', 'Test User')]; llave duplicada viola restricción de unicidad «fb_user_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO fb_user (id, name) VALUES ('1111222233334444', 'Test User')]; llave duplicada viola restricción de unicidad «fb_user_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «fb_user_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «comment_pkey», DETAIL=Ya existe la llave (id)=(763079420215588_751680390556990)., SCHEMA_NAME=public, TABLE_NAME=comment, CONSTRAINT_NAME=comment_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «comment_pkey», DETAIL=Ya existe la llave (id)=(763079420215588_1416241172757734)., SCHEMA_NAME=public, TABLE_NAME=comment, CONSTRAINT_NAME=comment_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO comment (id, message, created_time, updated_time, verb, auto_replied, lhia_mind_user, fb_user_id, parent_id, post_id) VALUES ('763079420215588_751680390556990', 'COMENTARIO A IMAGEN 1', '2025-07-22T20:06:39', '2025-07-22T20:06:39', 'add', false, NULL, '9857935820998879', NULL, '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «comment_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO comment (id, message, created_time, updated_time, verb, auto_replied, lhia_mind_user, fb_user_id, parent_id, post_id) VALUES ('763079420215588_751680390556990', 'COMENTARIO A IMAGEN 1', '2025-07-22T20:06:39', '2025-07-22T20:06:39', 'add', false, NULL, '9857935820998879', NULL, '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «comment_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «comment_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO comment (id, message, created_time, updated_time, verb, auto_replied, lhia_mind_user, fb_user_id, parent_id, post_id) VALUES ('763079420215588_1416241172757734', 'Respuesta a comentario 1', '2025-07-22T20:38:42', '2025-07-22T20:38:42', 'add', true, 'DavidBot', '1111222233334444', '763079420215588_751680390556990', '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «comment_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO comment (id, message, created_time, updated_time, verb, auto_replied, lhia_mind_user, fb_user_id, parent_id, post_id) VALUES ('763079420215588_1416241172757734', 'Respuesta a comentario 1', '2025-07-22T20:38:42', '2025-07-22T20:38:42', 'add', true, 'DavidBot', '1111222233334444', '763079420215588_751680390556990', '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «comment_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «comment_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «reaction_pkey», DETAIL=Ya existe la llave (id)=(r1)., SCHEMA_NAME=public, TABLE_NAME=reaction, CONSTRAINT_NAME=reaction_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «reaction_pkey», DETAIL=Ya existe la llave (id)=(r2)., SCHEMA_NAME=public, TABLE_NAME=reaction, CONSTRAINT_NAME=reaction_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO reaction (id, user_id, user_name, type, verb, comment_id, post_id) VALUES ('r1', '9857935820998879', 'David Guambaña', 'LOVE', 'add', NULL, '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «reaction_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO reaction (id, user_id, user_name, type, verb, comment_id, post_id) VALUES ('r1', '9857935820998879', 'David Guambaña', 'LOVE', 'add', NULL, '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «reaction_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «reaction_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO reaction (id, user_id, user_name, type, verb, comment_id, post_id) VALUES ('r2', '1111222233334444', 'Test User', 'WOW', 'add', '763079420215588_1416241172757734', NULL)]; llave duplicada viola restricción de unicidad «reaction_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO reaction (id, user_id, user_name, type, verb, comment_id, post_id) VALUES ('r2', '1111222233334444', 'Test User', 'WOW', 'add', '763079420215588_1416241172757734', NULL)]; llave duplicada viola restricción de unicidad «reaction_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «reaction_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:09 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «attachment_pkey», DETAIL=Ya existe la llave (id)=(a1)., SCHEMA_NAME=public, TABLE_NAME=attachment, CONSTRAINT_NAME=attachment_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:31:09 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO attachment (id, media_type, media_image, media_source, url, create_time, update_time, verb, message, post_id) VALUES ('a1', 'photo', 'https://img.com/pic1_thumb.jpg', 'https://cdn.com/img1.jpg', 'https://facebook.com/attachment/1', '2025-07-22T19:59:00', '2025-07-22T20:01:00', 'add', 'Imagen de prueba', '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «attachment_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO attachment (id, media_type, media_image, media_source, url, create_time, update_time, verb, message, post_id) VALUES ('a1', 'photo', 'https://img.com/pic1_thumb.jpg', 'https://cdn.com/img1.jpg', 'https://facebook.com/attachment/1', '2025-07-22T19:59:00', '2025-07-22T20:01:00', 'add', 'Imagen de prueba', '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «attachment_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «attachment_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:31:10 INFO  o.s.b.w.e.netty.NettyWebServer [126] - Netty started on port 8081 (http)
2025-07-31 09:31:10 INFO  c.m.MarciComentariosFacebookApplication [59] - Started MarciComentariosFacebookApplication in 7.027 seconds (process running for 13.384)
2025-07-31 09:33:54 INFO  o.s.b.w.e.netty.GracefulShutdown [53] - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-31 09:33:54 INFO  o.s.b.w.e.netty.GracefulShutdown [62] - Graceful shutdown complete
2025-07-31 09:34:03 INFO  o.h.validator.internal.util.Version [21] - HV000001: Hibernate Validator 8.0.1.Final
2025-07-31 09:34:03 INFO  c.m.MarciComentariosFacebookApplication [53] - Starting MarciComentariosFacebookApplication using Java 17.0.11 with PID 11160 (C:\Users\davic\OneDrive\Escritorio\PROYECTOS\TWS2\MARCIMEX\marci-comentarios-facebook\target\classes started by davic in C:\Users\davic\OneDrive\Escritorio\PROYECTOS\TWS2\MARCIMEX\marci-comentarios-facebook)
2025-07-31 09:34:03 INFO  c.m.MarciComentariosFacebookApplication [652] - No active profile set, falling back to 1 default profile: "default"
2025-07-31 09:34:04 INFO  o.s.d.r.c.RepositoryConfigurationDelegate [145] - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-07-31 09:34:04 INFO  o.s.d.r.c.RepositoryConfigurationDelegate [213] - Finished Spring Data repository scanning in 32 ms. Found 0 R2DBC repository interfaces.
2025-07-31 09:34:05 INFO  c.m.controllers.WebhookController [37] - ⏳ Suscribiendo a la página [1699940356976238] al webhook: https://graph.facebook.com/v23.0/1699940356976238/subscribed_apps?subscribed_fields=feed&access_token=EAAGjgTK34ZB0BPGxM71OlIRZBTdsRD0MRdSK5JaxlvUzeBFZA1PzZCHQ4Dbf7HmvIfzKLW0DixoIaC0QXZAfZBZCWbqqnyGQeds8WkoYEvMwq9QQhhOphyVsWyOTxnjTHINGNvwZBHmqhsfejauzZBgPuhKZAxReOV1F7HeDwQCtCACRGQttmwuZBZAnJJdA3tqeogwF5INMlMNr ...
2025-07-31 09:34:05 INFO  c.m.controllers.WebhookController [47] - ✅ Suscripción completada exitosamente para la página [1699940356976238]. Respuesta: {"success":true}
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «page» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «post» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «reaction» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «fb_user» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «comment» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «attachment» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «page_pkey», DETAIL=Ya existe la llave (id)=(763079420215588)., SCHEMA_NAME=public, TABLE_NAME=page, CONSTRAINT_NAME=page_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:34:06 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO page (id, name, category) VALUES ('763079420215588', 'Test - TWS2', 'Technology')]; llave duplicada viola restricción de unicidad «page_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO page (id, name, category) VALUES ('763079420215588', 'Test - TWS2', 'Technology')]; llave duplicada viola restricción de unicidad «page_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «page_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «page_pkey», DETAIL=Ya existe la llave (id)=(123456789012345)., SCHEMA_NAME=public, TABLE_NAME=page, CONSTRAINT_NAME=page_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:34:06 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO page (id, name, category) VALUES ('123456789012345', 'Demo Page', 'Education')]; llave duplicada viola restricción de unicidad «page_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO page (id, name, category) VALUES ('123456789012345', 'Demo Page', 'Education')]; llave duplicada viola restricción de unicidad «page_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «page_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «post_pkey», DETAIL=Ya existe la llave (id)=(763079420215588_111111111)., SCHEMA_NAME=public, TABLE_NAME=post, CONSTRAINT_NAME=post_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:34:06 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO post (id, message, full_picture, permalink_url, created_time, updated_time, status_type, is_published, page_id) VALUES ('763079420215588_111111111', 'Primer post de prueba', 'https://img.com/pic1.jpg', 'https://facebook.com/post/1', '2025-07-22T20:00:00', '2025-07-22T20:10:00', 'shared_story', true, '763079420215588')]; llave duplicada viola restricción de unicidad «post_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO post (id, message, full_picture, permalink_url, created_time, updated_time, status_type, is_published, page_id) VALUES ('763079420215588_111111111', 'Primer post de prueba', 'https://img.com/pic1.jpg', 'https://facebook.com/post/1', '2025-07-22T20:00:00', '2025-07-22T20:10:00', 'shared_story', true, '763079420215588')]; llave duplicada viola restricción de unicidad «post_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «post_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «fb_user_pkey», DETAIL=Ya existe la llave (id)=(9857935820998879)., SCHEMA_NAME=public, TABLE_NAME=fb_user, CONSTRAINT_NAME=fb_user_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:34:06 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO fb_user (id, name) VALUES ('9857935820998879', 'David Guambaña')]; llave duplicada viola restricción de unicidad «fb_user_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO fb_user (id, name) VALUES ('9857935820998879', 'David Guambaña')]; llave duplicada viola restricción de unicidad «fb_user_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «fb_user_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «fb_user_pkey», DETAIL=Ya existe la llave (id)=(1111222233334444)., SCHEMA_NAME=public, TABLE_NAME=fb_user, CONSTRAINT_NAME=fb_user_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:34:06 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO fb_user (id, name) VALUES ('1111222233334444', 'Test User')]; llave duplicada viola restricción de unicidad «fb_user_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO fb_user (id, name) VALUES ('1111222233334444', 'Test User')]; llave duplicada viola restricción de unicidad «fb_user_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «fb_user_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «comment_pkey», DETAIL=Ya existe la llave (id)=(763079420215588_751680390556990)., SCHEMA_NAME=public, TABLE_NAME=comment, CONSTRAINT_NAME=comment_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:34:06 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO comment (id, message, created_time, updated_time, verb, auto_replied, lhia_mind_user, fb_user_id, parent_id, post_id) VALUES ('763079420215588_751680390556990', 'COMENTARIO A IMAGEN 1', '2025-07-22T20:06:39', '2025-07-22T20:06:39', 'add', false, NULL, '9857935820998879', NULL, '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «comment_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO comment (id, message, created_time, updated_time, verb, auto_replied, lhia_mind_user, fb_user_id, parent_id, post_id) VALUES ('763079420215588_751680390556990', 'COMENTARIO A IMAGEN 1', '2025-07-22T20:06:39', '2025-07-22T20:06:39', 'add', false, NULL, '9857935820998879', NULL, '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «comment_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «comment_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «reaction_pkey», DETAIL=Ya existe la llave (id)=(r1)., SCHEMA_NAME=public, TABLE_NAME=reaction, CONSTRAINT_NAME=reaction_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «comment_pkey», DETAIL=Ya existe la llave (id)=(763079420215588_1416241172757734)., SCHEMA_NAME=public, TABLE_NAME=comment, CONSTRAINT_NAME=comment_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:34:06 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO reaction (id, user_id, user_name, type, verb, comment_id, post_id) VALUES ('r1', '9857935820998879', 'David Guambaña', 'LOVE', 'add', NULL, '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «reaction_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO reaction (id, user_id, user_name, type, verb, comment_id, post_id) VALUES ('r1', '9857935820998879', 'David Guambaña', 'LOVE', 'add', NULL, '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «reaction_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «reaction_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:34:06 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO comment (id, message, created_time, updated_time, verb, auto_replied, lhia_mind_user, fb_user_id, parent_id, post_id) VALUES ('763079420215588_1416241172757734', 'Respuesta a comentario 1', '2025-07-22T20:38:42', '2025-07-22T20:38:42', 'add', true, 'DavidBot', '1111222233334444', '763079420215588_751680390556990', '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «comment_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO comment (id, message, created_time, updated_time, verb, auto_replied, lhia_mind_user, fb_user_id, parent_id, post_id) VALUES ('763079420215588_1416241172757734', 'Respuesta a comentario 1', '2025-07-22T20:38:42', '2025-07-22T20:38:42', 'add', true, 'DavidBot', '1111222233334444', '763079420215588_751680390556990', '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «comment_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «comment_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «reaction_pkey», DETAIL=Ya existe la llave (id)=(r2)., SCHEMA_NAME=public, TABLE_NAME=reaction, CONSTRAINT_NAME=reaction_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:34:06 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=23505, MESSAGE=llave duplicada viola restricción de unicidad «attachment_pkey», DETAIL=Ya existe la llave (id)=(a1)., SCHEMA_NAME=public, TABLE_NAME=attachment, CONSTRAINT_NAME=attachment_pkey, FILE=nbtinsert.c, LINE=670, ROUTINE=_bt_check_unique
2025-07-31 09:34:06 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO reaction (id, user_id, user_name, type, verb, comment_id, post_id) VALUES ('r2', '1111222233334444', 'Test User', 'WOW', 'add', '763079420215588_1416241172757734', NULL)]; llave duplicada viola restricción de unicidad «reaction_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO reaction (id, user_id, user_name, type, verb, comment_id, post_id) VALUES ('r2', '1111222233334444', 'Test User', 'WOW', 'add', '763079420215588_1416241172757734', NULL)]; llave duplicada viola restricción de unicidad «reaction_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «reaction_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:34:06 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO attachment (id, media_type, media_image, media_source, url, create_time, update_time, verb, message, post_id) VALUES ('a1', 'photo', 'https://img.com/pic1_thumb.jpg', 'https://cdn.com/img1.jpg', 'https://facebook.com/attachment/1', '2025-07-22T19:59:00', '2025-07-22T20:01:00', 'add', 'Imagen de prueba', '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «attachment_pkey»
Caused by: org.springframework.dao.DuplicateKeyException: execute; SQL [INSERT INTO attachment (id, media_type, media_image, media_source, url, create_time, update_time, verb, message, post_id) VALUES ('a1', 'photo', 'https://img.com/pic1_thumb.jpg', 'https://cdn.com/img1.jpg', 'https://facebook.com/attachment/1', '2025-07-22T19:59:00', '2025-07-22T20:01:00', 'add', 'Imagen de prueba', '763079420215588_111111111')]; llave duplicada viola restricción de unicidad «attachment_pkey»
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:245)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlDataIntegrityViolationException: llave duplicada viola restricción de unicidad «attachment_pkey»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:92)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:34:07 INFO  o.s.b.w.e.netty.NettyWebServer [126] - Netty started on port 8081 (http)
2025-07-31 09:34:07 INFO  c.m.MarciComentariosFacebookApplication [59] - Started MarciComentariosFacebookApplication in 4.79 seconds (process running for 5.903)
2025-07-31 09:37:47 INFO  o.s.b.w.e.netty.GracefulShutdown [53] - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-31 09:37:47 INFO  o.s.b.w.e.netty.GracefulShutdown [62] - Graceful shutdown complete
2025-07-31 09:37:53 INFO  o.h.validator.internal.util.Version [21] - HV000001: Hibernate Validator 8.0.1.Final
2025-07-31 09:37:53 INFO  c.m.MarciComentariosFacebookApplication [53] - Starting MarciComentariosFacebookApplication using Java 17.0.11 with PID 23104 (C:\Users\davic\OneDrive\Escritorio\PROYECTOS\TWS2\MARCIMEX\marci-comentarios-facebook\target\classes started by davic in C:\Users\davic\OneDrive\Escritorio\PROYECTOS\TWS2\MARCIMEX\marci-comentarios-facebook)
2025-07-31 09:37:53 INFO  c.m.MarciComentariosFacebookApplication [652] - No active profile set, falling back to 1 default profile: "default"
2025-07-31 09:37:54 INFO  o.s.d.r.c.RepositoryConfigurationDelegate [145] - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-07-31 09:37:54 INFO  o.s.d.r.c.RepositoryConfigurationDelegate [213] - Finished Spring Data repository scanning in 39 ms. Found 0 R2DBC repository interfaces.
2025-07-31 09:37:55 INFO  c.m.controllers.WebhookController [37] - ⏳ Suscribiendo a la página [1699940356976238] al webhook: https://graph.facebook.com/v23.0/1699940356976238/subscribed_apps?subscribed_fields=feed&access_token=EAAGjgTK34ZB0BPGxM71OlIRZBTdsRD0MRdSK5JaxlvUzeBFZA1PzZCHQ4Dbf7HmvIfzKLW0DixoIaC0QXZAfZBZCWbqqnyGQeds8WkoYEvMwq9QQhhOphyVsWyOTxnjTHINGNvwZBHmqhsfejauzZBgPuhKZAxReOV1F7HeDwQCtCACRGQttmwuZBZAnJJdA3tqeogwF5INMlMNr ...
2025-07-31 09:37:56 INFO  c.m.controllers.WebhookController [47] - ✅ Suscripción completada exitosamente para la página [1699940356976238]. Respuesta: {"success":true}
2025-07-31 09:37:57 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «page» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:37:57 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «post» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:37:57 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «reaction» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:37:57 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «fb_user» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:37:57 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «comment» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:37:57 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «attachment» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:37:57 WARN  i.r.p.client.ReactorNettyClient [299] - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42601, MESSAGE=error de sintaxis en o cerca de «INTO», POSITION=32, FILE=scan.l, LINE=1180, ROUTINE=scanner_yyerror
2025-07-31 09:37:57 ERROR reactor.core.publisher.Operators [324] - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [INSERT INTO -- Páginas
INSERT INTO page (id, name, category)
VALUES ('763079420215588', 'Test - TWS2', 'Technology')
ON CONFLICT (id) DO NOTHING]
Caused by: org.springframework.r2dbc.BadSqlGrammarException: execute; bad SQL grammar [INSERT INTO -- Páginas
INSERT INTO page (id, name, category)
VALUES ('763079420215588', 'Test - TWS2', 'Technology')
ON CONFLICT (id) DO NOTHING]
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:253)
	at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnection$4(DefaultDatabaseClient.java:135)
	at reactor.core.publisher.Mono.lambda$onErrorMap$28(Mono.java:3848)
	at reactor.core.publisher.Mono.lambda$onErrorResume$30(Mono.java:3938)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredError(MonoUsingWhen.java:277)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:480)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:547)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:788)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:901)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onComplete(FluxHandleFuseable.java:239)
	at reactor.core.publisher.MonoSupplier$MonoSupplierSubscription.request(MonoSupplier.java:148)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:164)
	at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:84)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
	at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:368)
	at reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber.onError(MonoStreamCollector.java:149)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:612)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:592)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:867)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:994)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:670)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:748)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:790)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:241)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:129)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: error de sintaxis en o cerca de «INTO»
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:86)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at io.r2dbc.postgresql.PostgresqlResult.lambda$getRowsUpdated$0(PostgresqlResult.java:70)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:179)
	... 42 common frames omitted
2025-07-31 09:37:58 INFO  o.s.b.w.e.netty.NettyWebServer [126] - Netty started on port 8081 (http)
2025-07-31 09:37:58 INFO  c.m.MarciComentariosFacebookApplication [59] - Started MarciComentariosFacebookApplication in 6.222 seconds (process running for 7.036)
2025-07-31 09:41:03 INFO  o.s.b.w.e.netty.GracefulShutdown [53] - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-31 09:41:03 INFO  o.s.b.w.e.netty.GracefulShutdown [62] - Graceful shutdown complete
2025-07-31 09:41:09 INFO  o.h.validator.internal.util.Version [21] - HV000001: Hibernate Validator 8.0.1.Final
2025-07-31 09:41:09 INFO  c.m.MarciComentariosFacebookApplication [53] - Starting MarciComentariosFacebookApplication using Java 17.0.11 with PID 27968 (C:\Users\davic\OneDrive\Escritorio\PROYECTOS\TWS2\MARCIMEX\marci-comentarios-facebook\target\classes started by davic in C:\Users\davic\OneDrive\Escritorio\PROYECTOS\TWS2\MARCIMEX\marci-comentarios-facebook)
2025-07-31 09:41:09 INFO  c.m.MarciComentariosFacebookApplication [652] - No active profile set, falling back to 1 default profile: "default"
2025-07-31 09:41:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate [145] - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-07-31 09:41:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate [213] - Finished Spring Data repository scanning in 32 ms. Found 0 R2DBC repository interfaces.
2025-07-31 09:41:11 INFO  c.m.controllers.WebhookController [37] - ⏳ Suscribiendo a la página [1699940356976238] al webhook: https://graph.facebook.com/v23.0/1699940356976238/subscribed_apps?subscribed_fields=feed&access_token=EAAGjgTK34ZB0BPGxM71OlIRZBTdsRD0MRdSK5JaxlvUzeBFZA1PzZCHQ4Dbf7HmvIfzKLW0DixoIaC0QXZAfZBZCWbqqnyGQeds8WkoYEvMwq9QQhhOphyVsWyOTxnjTHINGNvwZBHmqhsfejauzZBgPuhKZAxReOV1F7HeDwQCtCACRGQttmwuZBZAnJJdA3tqeogwF5INMlMNr ...
2025-07-31 09:41:11 INFO  c.m.controllers.WebhookController [47] - ✅ Suscripción completada exitosamente para la página [1699940356976238]. Respuesta: {"success":true}
2025-07-31 09:41:13 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «page» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:41:13 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «post» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:41:13 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «reaction» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:41:13 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «fb_user» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:41:13 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «comment» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:41:13 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «attachment» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 09:41:13 INFO  o.s.b.w.e.netty.NettyWebServer [126] - Netty started on port 8081 (http)
2025-07-31 09:41:13 INFO  c.m.MarciComentariosFacebookApplication [59] - Started MarciComentariosFacebookApplication in 5.38 seconds (process running for 6.171)
2025-07-31 09:51:51 INFO  c.m.c.F.services.APIGraphServiceImp [58] - PETICION A: https://graph.facebook.com/v23.0/1699940356976238?fields=posts{id,message,full_picture,permalink_url,created_time,story,status_type,attachments{subattachments{media_type,media,url,type,target}},reactions}
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483718895265043
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483710258599240
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483708901932709
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2287438834893051
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1714185492218391
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705511199752487
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705507939752813
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1239752346809144
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1169090680319374
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1703356013301339
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_455712593147750
2025-07-31 09:51:55 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1339439923252483
2025-07-31 09:51:56 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_455712593147750"}
2025-07-31 09:51:56 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705511199752487"}
2025-07-31 09:51:56 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705507939752813"}
2025-07-31 09:51:56 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_2287438834893051"}
2025-07-31 09:51:56 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1339439923252483"}
2025-07-31 09:51:56 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1703356013301339"}
2025-07-31 09:51:56 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483708901932709_1286612673142108","message":"excelente","created_time":"2025-07-18T20:21:16+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483708901932709_1248749679592826","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:21:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483708901932709"}
2025-07-31 09:51:56 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483710258599240_1902435320327727","message":"Hola","created_time":"2025-07-18T20:28:38+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_527771857024974","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:28:41+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1044314031218791","message":"Buenas tardes","created_time":"2025-07-18T20:22:46+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_635712762359498","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:51+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1510704776966277","message":"","created_time":"2025-07-18T20:28:23+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483710258599240_1239476360993984","message":"yo","created_time":"2025-07-18T20:39:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_2328780924224364","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:39:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483710258599240"}
2025-07-31 09:51:56 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1704408759862731_1456205262050574","message":"Hola","created_time":"2025-07-18T20:38:43+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1704408759862731_1389842312240026","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:38:49+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_1239752346809144"}
2025-07-31 09:51:56 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483718895265043_1233729738235804","message":"Hola mensaje de envio f","created_time":"2025-07-21T17:15:10+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1639018536733710","message":"Hola mensaje de respuesta f","created_time":"2025-07-21T17:15:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_729873946422877","message":"Comentando desde LHIA-MIND 😀","created_time":"2025-07-28T14:34:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1657333991890206","message":"COMENTO ESTO DESDE LHIA MIND Y ESPERO UNA RESPUESTA DE LHIA😃","created_time":"2025-07-28T16:26:46+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_2039921653206315","message":"Hola muy buenas, que productos están en oferta?","created_time":"2025-07-29T14:48:58+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1260957189003413","message":"estoy comentando a un post","created_time":"2025-07-21T16:32:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_2271219493334193","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T16:32:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_755875753512544","message":"HOLA QUE PRODUCTOS ME PUEDE SUGERIR?","created_time":"2025-07-28T16:40:12+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1733388527293292","message":"Hola cuáles son los horarios 😀","created_time":"2025-07-29T19:10:15+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1754071778555823","message":"Hola, soy SolBot, tu asistente de inteligencia artificial. \n\nLo siento, no cuento con esa información. Te sugiero que consultes directamente en nuestras agencias o a través de nuestros canales de contacto para conocer los horarios.","created_time":"2025-07-29T19:10:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_767667895750381","message":"😆","created_time":"2025-07-18T19:20:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":{"data":[{"id":"9756967264408816","name":"David Guambaña","type":"CARE"}]},"comments":{"data":[{"id":"2483718895265043_1264735218368813","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:20:35+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1571517937567834","message":"respuesta a comentario","created_time":"2025-07-21T15:14:01+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1493142148353675","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:15:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_784785693978566","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:35:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_762091943140740","message":"Qué precio tiene","created_time":"2025-07-18T20:22:17+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1080943000129274","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_756102223456891","message":"|||||| | % *¨sdfsdf +´+}{ {564345345}{ + a como esta ese ][544 producto @\"arsarasraasr\" 123123","created_time":"2025-07-18T19:46:33+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1184990636766285","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:46:40+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_680717388335748","message":"Que productos ofrece?","created_time":"2025-07-29T14:50:39+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_732944276312380","message":"La Cooperativa de Ahorro y Crédito Gañansol ofrece los siguientes productos y servicios:\n\n**Créditos:**\n1. Credi Agropecuario\n2. Credi Microempresarial\n3. Credi Inmediato Micro\n4. Credi Violeta\n5. Credi Consumo\n6. Credi Inmediato Consumo\n7. Credi Pignoración\n8. Credi Inmobiliario\n\n**Ahorros:**\n1. Ahorro a la Vista\n2. Ahorro a Plazo Fijo\n3. Ahorro Programado\n4. Ahorro Infantil\n\n**Otros Servicios:**\n1. Transferencias Interbancarias\n2. Recepción de remesas desde el exterior\n3. Pago de servicios básicos e impuestos\n4. Recaudaciones de terceros (Internet, ventas por catálogo, recargas celulares)\n\nPara más detalles sobre cada producto, puedes visitar nuestras oficinas o contactar a través de nuestras redes sociales.","created_time":"2025-07-29T14:50:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_746641357756212","message":"estoy comentando a un post","created_time":"2025-07-21T17:05:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_24143746648627098","message":"estoy comentando a un post","created_time":"2025-07-21T16:31:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_629741363501785","message":"estoy comentando a un post","created_time":"2025-07-21T15:35:43+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_659908147140551","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_9883775385052914","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1499949708085586","message":"Hola mensaje de envio","created_time":"2025-07-21T17:14:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1116090677094403","message":"Hola mensaje de envio","created_time":"2025-07-21T17:13:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_754924310371624","message":"Hola mensaje de envio","created_time":"2025-07-21T17:12:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1269896364000255","message":"Hola mensaje de envio","created_time":"2025-07-21T17:10:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_767404492395181","message":"Comento esto esperando una respuesta de LHIA","created_time":"2025-07-28T16:45:37+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483718895265043_945043794429294","message":"hola","created_time":"2025-07-18T20:26:00+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1444162606718722","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483718895265043"}
2025-07-31 09:51:56 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1169090680319374"}
2025-07-31 09:51:57 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1714185492218391_1287476046064149","message":"Precio","created_time":"2025-07-18T20:26:07+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1714185492218391_763980002874762","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"1714185492218391_2434947900142143","message":"precio?","created_time":"2020-10-20T03:33:17+0000","updated_time":null,"from":null,"reactions":null,"comments":null}]},"id":"1699940356976238_1714185492218391"}
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [47] - Cliente desconectado
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483718895265043
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483710258599240
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483708901932709
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2287438834893051
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1714185492218391
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705511199752487
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705507939752813
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1239752346809144
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1169090680319374
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1703356013301339
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_455712593147750
2025-07-31 09:52:14 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1339439923252483
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1703356013301339"}
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1339439923252483"}
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705507939752813"}
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_2287438834893051"}
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_455712593147750"}
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705511199752487"}
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1169090680319374"}
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1714185492218391_1287476046064149","message":"Precio","created_time":"2025-07-18T20:26:07+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1714185492218391_763980002874762","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"1714185492218391_2434947900142143","message":"precio?","created_time":"2020-10-20T03:33:17+0000","updated_time":null,"from":null,"reactions":null,"comments":null}]},"id":"1699940356976238_1714185492218391"}
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483708901932709_1286612673142108","message":"excelente","created_time":"2025-07-18T20:21:16+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483708901932709_1248749679592826","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:21:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483708901932709"}
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483710258599240_1902435320327727","message":"Hola","created_time":"2025-07-18T20:28:38+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_527771857024974","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:28:41+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1044314031218791","message":"Buenas tardes","created_time":"2025-07-18T20:22:46+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_635712762359498","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:51+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1510704776966277","message":"","created_time":"2025-07-18T20:28:23+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483710258599240_1239476360993984","message":"yo","created_time":"2025-07-18T20:39:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_2328780924224364","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:39:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483710258599240"}
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1704408759862731_1456205262050574","message":"Hola","created_time":"2025-07-18T20:38:43+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1704408759862731_1389842312240026","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:38:49+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_1239752346809144"}
2025-07-31 09:52:15 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483718895265043_1233729738235804","message":"Hola mensaje de envio f","created_time":"2025-07-21T17:15:10+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1639018536733710","message":"Hola mensaje de respuesta f","created_time":"2025-07-21T17:15:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_729873946422877","message":"Comentando desde LHIA-MIND 😀","created_time":"2025-07-28T14:34:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1657333991890206","message":"COMENTO ESTO DESDE LHIA MIND Y ESPERO UNA RESPUESTA DE LHIA😃","created_time":"2025-07-28T16:26:46+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_2039921653206315","message":"Hola muy buenas, que productos están en oferta?","created_time":"2025-07-29T14:48:58+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1260957189003413","message":"estoy comentando a un post","created_time":"2025-07-21T16:32:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_2271219493334193","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T16:32:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_755875753512544","message":"HOLA QUE PRODUCTOS ME PUEDE SUGERIR?","created_time":"2025-07-28T16:40:12+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1733388527293292","message":"Hola cuáles son los horarios 😀","created_time":"2025-07-29T19:10:15+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1754071778555823","message":"Hola, soy SolBot, tu asistente de inteligencia artificial. \n\nLo siento, no cuento con esa información. Te sugiero que consultes directamente en nuestras agencias o a través de nuestros canales de contacto para conocer los horarios.","created_time":"2025-07-29T19:10:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_767667895750381","message":"😆","created_time":"2025-07-18T19:20:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":{"data":[{"id":"9756967264408816","name":"David Guambaña","type":"CARE"}]},"comments":{"data":[{"id":"2483718895265043_1264735218368813","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:20:35+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1571517937567834","message":"respuesta a comentario","created_time":"2025-07-21T15:14:01+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1493142148353675","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:15:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_784785693978566","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:35:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_762091943140740","message":"Qué precio tiene","created_time":"2025-07-18T20:22:17+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1080943000129274","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_756102223456891","message":"|||||| | % *¨sdfsdf +´+}{ {564345345}{ + a como esta ese ][544 producto @\"arsarasraasr\" 123123","created_time":"2025-07-18T19:46:33+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1184990636766285","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:46:40+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_680717388335748","message":"Que productos ofrece?","created_time":"2025-07-29T14:50:39+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_732944276312380","message":"La Cooperativa de Ahorro y Crédito Gañansol ofrece los siguientes productos y servicios:\n\n**Créditos:**\n1. Credi Agropecuario\n2. Credi Microempresarial\n3. Credi Inmediato Micro\n4. Credi Violeta\n5. Credi Consumo\n6. Credi Inmediato Consumo\n7. Credi Pignoración\n8. Credi Inmobiliario\n\n**Ahorros:**\n1. Ahorro a la Vista\n2. Ahorro a Plazo Fijo\n3. Ahorro Programado\n4. Ahorro Infantil\n\n**Otros Servicios:**\n1. Transferencias Interbancarias\n2. Recepción de remesas desde el exterior\n3. Pago de servicios básicos e impuestos\n4. Recaudaciones de terceros (Internet, ventas por catálogo, recargas celulares)\n\nPara más detalles sobre cada producto, puedes visitar nuestras oficinas o contactar a través de nuestras redes sociales.","created_time":"2025-07-29T14:50:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_746641357756212","message":"estoy comentando a un post","created_time":"2025-07-21T17:05:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_24143746648627098","message":"estoy comentando a un post","created_time":"2025-07-21T16:31:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_629741363501785","message":"estoy comentando a un post","created_time":"2025-07-21T15:35:43+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_659908147140551","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_9883775385052914","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1499949708085586","message":"Hola mensaje de envio","created_time":"2025-07-21T17:14:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1116090677094403","message":"Hola mensaje de envio","created_time":"2025-07-21T17:13:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_754924310371624","message":"Hola mensaje de envio","created_time":"2025-07-21T17:12:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1269896364000255","message":"Hola mensaje de envio","created_time":"2025-07-21T17:10:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_767404492395181","message":"Comento esto esperando una respuesta de LHIA","created_time":"2025-07-28T16:45:37+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483718895265043_945043794429294","message":"hola","created_time":"2025-07-18T20:26:00+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1444162606718722","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483718895265043"}
2025-07-31 09:52:18 INFO  c.m.w.CommentWebSocketHandler [47] - Cliente desconectado
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483718895265043
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483710258599240
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483708901932709
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2287438834893051
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1714185492218391
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705511199752487
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705507939752813
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1239752346809144
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1169090680319374
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1703356013301339
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_455712593147750
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1339439923252483
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_2287438834893051"}
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1703356013301339"}
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_455712593147750"}
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705511199752487"}
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1339439923252483"}
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705507939752813"}
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1169090680319374"}
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483708901932709_1286612673142108","message":"excelente","created_time":"2025-07-18T20:21:16+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483708901932709_1248749679592826","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:21:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483708901932709"}
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1714185492218391_1287476046064149","message":"Precio","created_time":"2025-07-18T20:26:07+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1714185492218391_763980002874762","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"1714185492218391_2434947900142143","message":"precio?","created_time":"2020-10-20T03:33:17+0000","updated_time":null,"from":null,"reactions":null,"comments":null}]},"id":"1699940356976238_1714185492218391"}
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483710258599240_1902435320327727","message":"Hola","created_time":"2025-07-18T20:28:38+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_527771857024974","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:28:41+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1044314031218791","message":"Buenas tardes","created_time":"2025-07-18T20:22:46+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_635712762359498","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:51+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1510704776966277","message":"","created_time":"2025-07-18T20:28:23+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483710258599240_1239476360993984","message":"yo","created_time":"2025-07-18T20:39:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_2328780924224364","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:39:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483710258599240"}
2025-07-31 09:52:19 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1704408759862731_1456205262050574","message":"Hola","created_time":"2025-07-18T20:38:43+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1704408759862731_1389842312240026","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:38:49+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_1239752346809144"}
2025-07-31 09:52:20 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483718895265043_1233729738235804","message":"Hola mensaje de envio f","created_time":"2025-07-21T17:15:10+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1639018536733710","message":"Hola mensaje de respuesta f","created_time":"2025-07-21T17:15:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_729873946422877","message":"Comentando desde LHIA-MIND 😀","created_time":"2025-07-28T14:34:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1657333991890206","message":"COMENTO ESTO DESDE LHIA MIND Y ESPERO UNA RESPUESTA DE LHIA😃","created_time":"2025-07-28T16:26:46+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_2039921653206315","message":"Hola muy buenas, que productos están en oferta?","created_time":"2025-07-29T14:48:58+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1260957189003413","message":"estoy comentando a un post","created_time":"2025-07-21T16:32:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_2271219493334193","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T16:32:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_755875753512544","message":"HOLA QUE PRODUCTOS ME PUEDE SUGERIR?","created_time":"2025-07-28T16:40:12+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1733388527293292","message":"Hola cuáles son los horarios 😀","created_time":"2025-07-29T19:10:15+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1754071778555823","message":"Hola, soy SolBot, tu asistente de inteligencia artificial. \n\nLo siento, no cuento con esa información. Te sugiero que consultes directamente en nuestras agencias o a través de nuestros canales de contacto para conocer los horarios.","created_time":"2025-07-29T19:10:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_767667895750381","message":"😆","created_time":"2025-07-18T19:20:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":{"data":[{"id":"9756967264408816","name":"David Guambaña","type":"CARE"}]},"comments":{"data":[{"id":"2483718895265043_1264735218368813","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:20:35+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1571517937567834","message":"respuesta a comentario","created_time":"2025-07-21T15:14:01+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1493142148353675","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:15:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_784785693978566","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:35:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_762091943140740","message":"Qué precio tiene","created_time":"2025-07-18T20:22:17+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1080943000129274","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_756102223456891","message":"|||||| | % *¨sdfsdf +´+}{ {564345345}{ + a como esta ese ][544 producto @\"arsarasraasr\" 123123","created_time":"2025-07-18T19:46:33+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1184990636766285","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:46:40+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_680717388335748","message":"Que productos ofrece?","created_time":"2025-07-29T14:50:39+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_732944276312380","message":"La Cooperativa de Ahorro y Crédito Gañansol ofrece los siguientes productos y servicios:\n\n**Créditos:**\n1. Credi Agropecuario\n2. Credi Microempresarial\n3. Credi Inmediato Micro\n4. Credi Violeta\n5. Credi Consumo\n6. Credi Inmediato Consumo\n7. Credi Pignoración\n8. Credi Inmobiliario\n\n**Ahorros:**\n1. Ahorro a la Vista\n2. Ahorro a Plazo Fijo\n3. Ahorro Programado\n4. Ahorro Infantil\n\n**Otros Servicios:**\n1. Transferencias Interbancarias\n2. Recepción de remesas desde el exterior\n3. Pago de servicios básicos e impuestos\n4. Recaudaciones de terceros (Internet, ventas por catálogo, recargas celulares)\n\nPara más detalles sobre cada producto, puedes visitar nuestras oficinas o contactar a través de nuestras redes sociales.","created_time":"2025-07-29T14:50:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_746641357756212","message":"estoy comentando a un post","created_time":"2025-07-21T17:05:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_24143746648627098","message":"estoy comentando a un post","created_time":"2025-07-21T16:31:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_629741363501785","message":"estoy comentando a un post","created_time":"2025-07-21T15:35:43+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_659908147140551","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_9883775385052914","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1499949708085586","message":"Hola mensaje de envio","created_time":"2025-07-21T17:14:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1116090677094403","message":"Hola mensaje de envio","created_time":"2025-07-21T17:13:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_754924310371624","message":"Hola mensaje de envio","created_time":"2025-07-21T17:12:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1269896364000255","message":"Hola mensaje de envio","created_time":"2025-07-21T17:10:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_767404492395181","message":"Comento esto esperando una respuesta de LHIA","created_time":"2025-07-28T16:45:37+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483718895265043_945043794429294","message":"hola","created_time":"2025-07-18T20:26:00+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1444162606718722","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483718895265043"}
2025-07-31 09:52:21 INFO  c.m.w.CommentWebSocketHandler [47] - Cliente desconectado
2025-07-31 09:52:22 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483718895265043
2025-07-31 09:52:22 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483710258599240
2025-07-31 09:52:22 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483708901932709
2025-07-31 09:52:22 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2287438834893051
2025-07-31 09:52:22 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1714185492218391
2025-07-31 09:52:22 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705511199752487
2025-07-31 09:52:22 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705507939752813
2025-07-31 09:52:22 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1239752346809144
2025-07-31 09:52:22 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1169090680319374
2025-07-31 09:52:22 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1703356013301339
2025-07-31 09:52:22 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_455712593147750
2025-07-31 09:52:23 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1339439923252483
2025-07-31 09:52:23 INFO  c.m.w.CommentWebSocketHandler [47] - Cliente desconectado
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483718895265043
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483710258599240
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483708901932709
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2287438834893051
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1714185492218391
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705511199752487
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705507939752813
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1239752346809144
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1169090680319374
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1703356013301339
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_455712593147750
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1339439923252483
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705511199752487"}
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705507939752813"}
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1169090680319374"}
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1703356013301339"}
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_2287438834893051"}
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1339439923252483"}
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_455712593147750"}
2025-07-31 09:52:24 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483708901932709_1286612673142108","message":"excelente","created_time":"2025-07-18T20:21:16+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483708901932709_1248749679592826","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:21:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483708901932709"}
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1714185492218391_1287476046064149","message":"Precio","created_time":"2025-07-18T20:26:07+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1714185492218391_763980002874762","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"1714185492218391_2434947900142143","message":"precio?","created_time":"2020-10-20T03:33:17+0000","updated_time":null,"from":null,"reactions":null,"comments":null}]},"id":"1699940356976238_1714185492218391"}
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1704408759862731_1456205262050574","message":"Hola","created_time":"2025-07-18T20:38:43+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1704408759862731_1389842312240026","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:38:49+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_1239752346809144"}
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [47] - Cliente desconectado
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483718895265043
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483710258599240
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483708901932709
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2287438834893051
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1714185492218391
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705511199752487
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705507939752813
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1239752346809144
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1169090680319374
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1703356013301339
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_455712593147750
2025-07-31 09:52:25 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1339439923252483
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1703356013301339"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705507939752813"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_2287438834893051"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705511199752487"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1169090680319374"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_455712593147750"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1339439923252483"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1714185492218391_1287476046064149","message":"Precio","created_time":"2025-07-18T20:26:07+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1714185492218391_763980002874762","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"1714185492218391_2434947900142143","message":"precio?","created_time":"2020-10-20T03:33:17+0000","updated_time":null,"from":null,"reactions":null,"comments":null}]},"id":"1699940356976238_1714185492218391"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483708901932709_1286612673142108","message":"excelente","created_time":"2025-07-18T20:21:16+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483708901932709_1248749679592826","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:21:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483708901932709"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483710258599240_1902435320327727","message":"Hola","created_time":"2025-07-18T20:28:38+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_527771857024974","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:28:41+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1044314031218791","message":"Buenas tardes","created_time":"2025-07-18T20:22:46+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_635712762359498","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:51+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1510704776966277","message":"","created_time":"2025-07-18T20:28:23+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483710258599240_1239476360993984","message":"yo","created_time":"2025-07-18T20:39:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_2328780924224364","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:39:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483710258599240"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1704408759862731_1456205262050574","message":"Hola","created_time":"2025-07-18T20:38:43+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1704408759862731_1389842312240026","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:38:49+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_1239752346809144"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483718895265043_1233729738235804","message":"Hola mensaje de envio f","created_time":"2025-07-21T17:15:10+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1639018536733710","message":"Hola mensaje de respuesta f","created_time":"2025-07-21T17:15:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_729873946422877","message":"Comentando desde LHIA-MIND 😀","created_time":"2025-07-28T14:34:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1657333991890206","message":"COMENTO ESTO DESDE LHIA MIND Y ESPERO UNA RESPUESTA DE LHIA😃","created_time":"2025-07-28T16:26:46+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_2039921653206315","message":"Hola muy buenas, que productos están en oferta?","created_time":"2025-07-29T14:48:58+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1260957189003413","message":"estoy comentando a un post","created_time":"2025-07-21T16:32:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_2271219493334193","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T16:32:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_755875753512544","message":"HOLA QUE PRODUCTOS ME PUEDE SUGERIR?","created_time":"2025-07-28T16:40:12+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1733388527293292","message":"Hola cuáles son los horarios 😀","created_time":"2025-07-29T19:10:15+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1754071778555823","message":"Hola, soy SolBot, tu asistente de inteligencia artificial. \n\nLo siento, no cuento con esa información. Te sugiero que consultes directamente en nuestras agencias o a través de nuestros canales de contacto para conocer los horarios.","created_time":"2025-07-29T19:10:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_767667895750381","message":"😆","created_time":"2025-07-18T19:20:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":{"data":[{"id":"9756967264408816","name":"David Guambaña","type":"CARE"}]},"comments":{"data":[{"id":"2483718895265043_1264735218368813","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:20:35+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1571517937567834","message":"respuesta a comentario","created_time":"2025-07-21T15:14:01+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1493142148353675","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:15:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_784785693978566","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:35:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_762091943140740","message":"Qué precio tiene","created_time":"2025-07-18T20:22:17+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1080943000129274","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_756102223456891","message":"|||||| | % *¨sdfsdf +´+}{ {564345345}{ + a como esta ese ][544 producto @\"arsarasraasr\" 123123","created_time":"2025-07-18T19:46:33+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1184990636766285","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:46:40+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_680717388335748","message":"Que productos ofrece?","created_time":"2025-07-29T14:50:39+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_732944276312380","message":"La Cooperativa de Ahorro y Crédito Gañansol ofrece los siguientes productos y servicios:\n\n**Créditos:**\n1. Credi Agropecuario\n2. Credi Microempresarial\n3. Credi Inmediato Micro\n4. Credi Violeta\n5. Credi Consumo\n6. Credi Inmediato Consumo\n7. Credi Pignoración\n8. Credi Inmobiliario\n\n**Ahorros:**\n1. Ahorro a la Vista\n2. Ahorro a Plazo Fijo\n3. Ahorro Programado\n4. Ahorro Infantil\n\n**Otros Servicios:**\n1. Transferencias Interbancarias\n2. Recepción de remesas desde el exterior\n3. Pago de servicios básicos e impuestos\n4. Recaudaciones de terceros (Internet, ventas por catálogo, recargas celulares)\n\nPara más detalles sobre cada producto, puedes visitar nuestras oficinas o contactar a través de nuestras redes sociales.","created_time":"2025-07-29T14:50:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_746641357756212","message":"estoy comentando a un post","created_time":"2025-07-21T17:05:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_24143746648627098","message":"estoy comentando a un post","created_time":"2025-07-21T16:31:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_629741363501785","message":"estoy comentando a un post","created_time":"2025-07-21T15:35:43+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_659908147140551","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_9883775385052914","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1499949708085586","message":"Hola mensaje de envio","created_time":"2025-07-21T17:14:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1116090677094403","message":"Hola mensaje de envio","created_time":"2025-07-21T17:13:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_754924310371624","message":"Hola mensaje de envio","created_time":"2025-07-21T17:12:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1269896364000255","message":"Hola mensaje de envio","created_time":"2025-07-21T17:10:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_767404492395181","message":"Comento esto esperando una respuesta de LHIA","created_time":"2025-07-28T16:45:37+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483718895265043_945043794429294","message":"hola","created_time":"2025-07-18T20:26:00+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1444162606718722","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483718895265043"}
2025-07-31 09:52:26 INFO  c.m.w.CommentWebSocketHandler [47] - Cliente desconectado
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483718895265043
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483710258599240
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483708901932709
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2287438834893051
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1714185492218391
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705511199752487
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705507939752813
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1239752346809144
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1169090680319374
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1703356013301339
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_455712593147750
2025-07-31 09:52:27 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1339439923252483
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_455712593147750"}
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705507939752813"}
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1339439923252483"}
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_2287438834893051"}
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1703356013301339"}
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705511199752487"}
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1169090680319374"}
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483708901932709_1286612673142108","message":"excelente","created_time":"2025-07-18T20:21:16+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483708901932709_1248749679592826","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:21:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483708901932709"}
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1714185492218391_1287476046064149","message":"Precio","created_time":"2025-07-18T20:26:07+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1714185492218391_763980002874762","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"1714185492218391_2434947900142143","message":"precio?","created_time":"2020-10-20T03:33:17+0000","updated_time":null,"from":null,"reactions":null,"comments":null}]},"id":"1699940356976238_1714185492218391"}
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1704408759862731_1456205262050574","message":"Hola","created_time":"2025-07-18T20:38:43+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1704408759862731_1389842312240026","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:38:49+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_1239752346809144"}
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483710258599240_1902435320327727","message":"Hola","created_time":"2025-07-18T20:28:38+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_527771857024974","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:28:41+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1044314031218791","message":"Buenas tardes","created_time":"2025-07-18T20:22:46+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_635712762359498","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:51+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1510704776966277","message":"","created_time":"2025-07-18T20:28:23+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483710258599240_1239476360993984","message":"yo","created_time":"2025-07-18T20:39:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_2328780924224364","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:39:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483710258599240"}
2025-07-31 09:52:28 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483718895265043_1233729738235804","message":"Hola mensaje de envio f","created_time":"2025-07-21T17:15:10+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1639018536733710","message":"Hola mensaje de respuesta f","created_time":"2025-07-21T17:15:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_729873946422877","message":"Comentando desde LHIA-MIND 😀","created_time":"2025-07-28T14:34:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1657333991890206","message":"COMENTO ESTO DESDE LHIA MIND Y ESPERO UNA RESPUESTA DE LHIA😃","created_time":"2025-07-28T16:26:46+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_2039921653206315","message":"Hola muy buenas, que productos están en oferta?","created_time":"2025-07-29T14:48:58+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1260957189003413","message":"estoy comentando a un post","created_time":"2025-07-21T16:32:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_2271219493334193","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T16:32:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_755875753512544","message":"HOLA QUE PRODUCTOS ME PUEDE SUGERIR?","created_time":"2025-07-28T16:40:12+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1733388527293292","message":"Hola cuáles son los horarios 😀","created_time":"2025-07-29T19:10:15+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1754071778555823","message":"Hola, soy SolBot, tu asistente de inteligencia artificial. \n\nLo siento, no cuento con esa información. Te sugiero que consultes directamente en nuestras agencias o a través de nuestros canales de contacto para conocer los horarios.","created_time":"2025-07-29T19:10:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_767667895750381","message":"😆","created_time":"2025-07-18T19:20:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":{"data":[{"id":"9756967264408816","name":"David Guambaña","type":"CARE"}]},"comments":{"data":[{"id":"2483718895265043_1264735218368813","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:20:35+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1571517937567834","message":"respuesta a comentario","created_time":"2025-07-21T15:14:01+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1493142148353675","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:15:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_784785693978566","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:35:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_762091943140740","message":"Qué precio tiene","created_time":"2025-07-18T20:22:17+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1080943000129274","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_756102223456891","message":"|||||| | % *¨sdfsdf +´+}{ {564345345}{ + a como esta ese ][544 producto @\"arsarasraasr\" 123123","created_time":"2025-07-18T19:46:33+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1184990636766285","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:46:40+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_680717388335748","message":"Que productos ofrece?","created_time":"2025-07-29T14:50:39+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_732944276312380","message":"La Cooperativa de Ahorro y Crédito Gañansol ofrece los siguientes productos y servicios:\n\n**Créditos:**\n1. Credi Agropecuario\n2. Credi Microempresarial\n3. Credi Inmediato Micro\n4. Credi Violeta\n5. Credi Consumo\n6. Credi Inmediato Consumo\n7. Credi Pignoración\n8. Credi Inmobiliario\n\n**Ahorros:**\n1. Ahorro a la Vista\n2. Ahorro a Plazo Fijo\n3. Ahorro Programado\n4. Ahorro Infantil\n\n**Otros Servicios:**\n1. Transferencias Interbancarias\n2. Recepción de remesas desde el exterior\n3. Pago de servicios básicos e impuestos\n4. Recaudaciones de terceros (Internet, ventas por catálogo, recargas celulares)\n\nPara más detalles sobre cada producto, puedes visitar nuestras oficinas o contactar a través de nuestras redes sociales.","created_time":"2025-07-29T14:50:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_746641357756212","message":"estoy comentando a un post","created_time":"2025-07-21T17:05:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_24143746648627098","message":"estoy comentando a un post","created_time":"2025-07-21T16:31:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_629741363501785","message":"estoy comentando a un post","created_time":"2025-07-21T15:35:43+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_659908147140551","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_9883775385052914","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1499949708085586","message":"Hola mensaje de envio","created_time":"2025-07-21T17:14:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1116090677094403","message":"Hola mensaje de envio","created_time":"2025-07-21T17:13:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_754924310371624","message":"Hola mensaje de envio","created_time":"2025-07-21T17:12:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1269896364000255","message":"Hola mensaje de envio","created_time":"2025-07-21T17:10:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_767404492395181","message":"Comento esto esperando una respuesta de LHIA","created_time":"2025-07-28T16:45:37+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483718895265043_945043794429294","message":"hola","created_time":"2025-07-18T20:26:00+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1444162606718722","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483718895265043"}
2025-07-31 09:52:31 INFO  c.m.w.CommentWebSocketHandler [47] - Cliente desconectado
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483718895265043
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483710258599240
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2483708901932709
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_2287438834893051
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1714185492218391
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705511199752487
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1705507939752813
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1239752346809144
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1169090680319374
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1703356013301339
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_455712593147750
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [43] - Cliente se suscribió a postId: 1699940356976238_1339439923252483
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1703356013301339"}
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705507939752813"}
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_455712593147750"}
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1339439923252483"}
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_2287438834893051"}
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1169090680319374"}
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":null,"id":"1699940356976238_1705511199752487"}
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483708901932709_1286612673142108","message":"excelente","created_time":"2025-07-18T20:21:16+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483708901932709_1248749679592826","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:21:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483708901932709"}
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1714185492218391_1287476046064149","message":"Precio","created_time":"2025-07-18T20:26:07+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1714185492218391_763980002874762","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"1714185492218391_2434947900142143","message":"precio?","created_time":"2020-10-20T03:33:17+0000","updated_time":null,"from":null,"reactions":null,"comments":null}]},"id":"1699940356976238_1714185492218391"}
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483710258599240_1902435320327727","message":"Hola","created_time":"2025-07-18T20:28:38+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_527771857024974","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:28:41+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1044314031218791","message":"Buenas tardes","created_time":"2025-07-18T20:22:46+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_635712762359498","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:51+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483710258599240_1510704776966277","message":"","created_time":"2025-07-18T20:28:23+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483710258599240_1239476360993984","message":"yo","created_time":"2025-07-18T20:39:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483710258599240_2328780924224364","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:39:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483710258599240"}
2025-07-31 09:52:32 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"1704408759862731_1456205262050574","message":"Hola","created_time":"2025-07-18T20:38:43+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"1704408759862731_1389842312240026","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:38:49+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_1239752346809144"}
2025-07-31 09:52:33 INFO  c.m.w.CommentWebSocketHandler [57] - Enviando comentarios iniciales: {"comments":{"data":[{"id":"2483718895265043_1233729738235804","message":"Hola mensaje de envio f","created_time":"2025-07-21T17:15:10+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1639018536733710","message":"Hola mensaje de respuesta f","created_time":"2025-07-21T17:15:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_729873946422877","message":"Comentando desde LHIA-MIND 😀","created_time":"2025-07-28T14:34:24+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1657333991890206","message":"COMENTO ESTO DESDE LHIA MIND Y ESPERO UNA RESPUESTA DE LHIA😃","created_time":"2025-07-28T16:26:46+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_2039921653206315","message":"Hola muy buenas, que productos están en oferta?","created_time":"2025-07-29T14:48:58+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1260957189003413","message":"estoy comentando a un post","created_time":"2025-07-21T16:32:16+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_2271219493334193","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T16:32:33+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_755875753512544","message":"HOLA QUE PRODUCTOS ME PUEDE SUGERIR?","created_time":"2025-07-28T16:40:12+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_1733388527293292","message":"Hola cuáles son los horarios 😀","created_time":"2025-07-29T19:10:15+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1754071778555823","message":"Hola, soy SolBot, tu asistente de inteligencia artificial. \n\nLo siento, no cuento con esa información. Te sugiero que consultes directamente en nuestras agencias o a través de nuestros canales de contacto para conocer los horarios.","created_time":"2025-07-29T19:10:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_767667895750381","message":"😆","created_time":"2025-07-18T19:20:29+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":{"data":[{"id":"9756967264408816","name":"David Guambaña","type":"CARE"}]},"comments":{"data":[{"id":"2483718895265043_1264735218368813","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:20:35+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1571517937567834","message":"respuesta a comentario","created_time":"2025-07-21T15:14:01+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1493142148353675","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:15:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_784785693978566","message":"estoy respondiendo a un comentario","created_time":"2025-07-21T15:35:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_762091943140740","message":"Qué precio tiene","created_time":"2025-07-18T20:22:17+0000","updated_time":null,"from":{"id":"9147793475312632","name":"Juan Andres Caisapanta"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1080943000129274","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:22:21+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_756102223456891","message":"|||||| | % *¨sdfsdf +´+}{ {564345345}{ + a como esta ese ][544 producto @\"arsarasraasr\" 123123","created_time":"2025-07-18T19:46:33+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1184990636766285","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T19:46:40+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_680717388335748","message":"Que productos ofrece?","created_time":"2025-07-29T14:50:39+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_732944276312380","message":"La Cooperativa de Ahorro y Crédito Gañansol ofrece los siguientes productos y servicios:\n\n**Créditos:**\n1. Credi Agropecuario\n2. Credi Microempresarial\n3. Credi Inmediato Micro\n4. Credi Violeta\n5. Credi Consumo\n6. Credi Inmediato Consumo\n7. Credi Pignoración\n8. Credi Inmobiliario\n\n**Ahorros:**\n1. Ahorro a la Vista\n2. Ahorro a Plazo Fijo\n3. Ahorro Programado\n4. Ahorro Infantil\n\n**Otros Servicios:**\n1. Transferencias Interbancarias\n2. Recepción de remesas desde el exterior\n3. Pago de servicios básicos e impuestos\n4. Recaudaciones de terceros (Internet, ventas por catálogo, recargas celulares)\n\nPara más detalles sobre cada producto, puedes visitar nuestras oficinas o contactar a través de nuestras redes sociales.","created_time":"2025-07-29T14:50:52+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}},{"id":"2483718895265043_746641357756212","message":"estoy comentando a un post","created_time":"2025-07-21T17:05:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_24143746648627098","message":"estoy comentando a un post","created_time":"2025-07-21T16:31:32+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_629741363501785","message":"estoy comentando a un post","created_time":"2025-07-21T15:35:43+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_659908147140551","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_9883775385052914","message":"estoy comentando a un post","created_time":"2025-07-21T15:15:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1499949708085586","message":"Hola mensaje de envio","created_time":"2025-07-21T17:14:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1116090677094403","message":"Hola mensaje de envio","created_time":"2025-07-21T17:13:39+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_754924310371624","message":"Hola mensaje de envio","created_time":"2025-07-21T17:12:25+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_1269896364000255","message":"Hola mensaje de envio","created_time":"2025-07-21T17:10:47+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null},{"id":"2483718895265043_767404492395181","message":"Comento esto esperando una respuesta de LHIA","created_time":"2025-07-28T16:45:37+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":null},{"id":"2483718895265043_945043794429294","message":"hola","created_time":"2025-07-18T20:26:00+0000","updated_time":null,"from":{"id":"9756967264408816","name":"David Guambaña"},"reactions":null,"comments":{"data":[{"id":"2483718895265043_1444162606718722","message":"Respuesta a comentario desde automatico","created_time":"2025-07-18T20:26:05+0000","updated_time":null,"from":{"id":"1699940356976238","name":"Consola Retro"},"reactions":null,"comments":null}]}}]},"id":"1699940356976238_2483718895265043"}
2025-07-31 09:54:13 INFO  c.m.w.CommentWebSocketHandler [47] - Cliente desconectado
2025-07-31 15:27:28 INFO  o.s.b.w.e.netty.GracefulShutdown [53] - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-31 15:27:28 INFO  o.s.b.w.e.netty.GracefulShutdown [62] - Graceful shutdown complete
2025-07-31 16:18:49 INFO  o.h.validator.internal.util.Version [21] - HV000001: Hibernate Validator 8.0.1.Final
2025-07-31 16:18:49 INFO  c.m.MarciComentariosFacebookApplication [53] - Starting MarciComentariosFacebookApplication using Java 17.0.11 with PID 2132 (C:\Users\davic\OneDrive\Escritorio\PROYECTOS\TWS2\MARCIMEX\marci-comentarios-facebook\target\classes started by davic in C:\Users\davic\OneDrive\Escritorio\PROYECTOS\TWS2\MARCIMEX\marci-comentarios-facebook)
2025-07-31 16:18:49 INFO  c.m.MarciComentariosFacebookApplication [652] - No active profile set, falling back to 1 default profile: "default"
2025-07-31 16:18:50 INFO  o.s.d.r.c.RepositoryConfigurationDelegate [145] - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-07-31 16:18:50 INFO  o.s.d.r.c.RepositoryConfigurationDelegate [213] - Finished Spring Data repository scanning in 29 ms. Found 0 R2DBC repository interfaces.
2025-07-31 16:18:51 INFO  c.m.controllers.WebhookController [37] - ⏳ Suscribiendo a la página [1699940356976238] al webhook: https://graph.facebook.com/v23.0/1699940356976238/subscribed_apps?subscribed_fields=feed&access_token=EAAGjgTK34ZB0BPGxM71OlIRZBTdsRD0MRdSK5JaxlvUzeBFZA1PzZCHQ4Dbf7HmvIfzKLW0DixoIaC0QXZAfZBZCWbqqnyGQeds8WkoYEvMwq9QQhhOphyVsWyOTxnjTHINGNvwZBHmqhsfejauzZBgPuhKZAxReOV1F7HeDwQCtCACRGQttmwuZBZAnJJdA3tqeogwF5INMlMNr ...
2025-07-31 16:18:52 INFO  c.m.controllers.WebhookController [47] - ✅ Suscripción completada exitosamente para la página [1699940356976238]. Respuesta: {"success":true}
2025-07-31 16:18:53 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «page» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 16:18:53 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «post» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 16:18:53 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «reaction» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 16:18:53 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «fb_user» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 16:18:53 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «comment» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 16:18:53 WARN  i.r.p.client.ReactorNettyClient [299] - Notice: SEVERITY_LOCALIZED=NOTICE, SEVERITY_NON_LOCALIZED=NOTICE, CODE=42P07, MESSAGE=la relación «attachment» ya existe, omitiendo, FILE=parse_utilcmd.c, LINE=202, ROUTINE=transformCreateStmt
2025-07-31 16:18:54 INFO  o.s.b.w.e.netty.NettyWebServer [126] - Netty started on port 8081 (http)
2025-07-31 16:18:54 INFO  c.m.MarciComentariosFacebookApplication [59] - Started MarciComentariosFacebookApplication in 6.218 seconds (process running for 7.202)
2025-07-31 16:23:14 INFO  c.m.controllers.WebhookController [78] - 📬 Webhook recibido: WebhookPayload(object=page, entry=[WebhookPayload.Entry(id=763079420215588, time=1753996992, changes=[WebhookPayload.Change(field=feed, value=WebhookPayload.Value(item=comment, verb=add, post_id=763079420215588_122098044554954170, comment_id=122098044554954170_1055340836794513, parent_id=122098044554954170_1813847852898835, photo_id=null, created_time=1753996984, updated_time=null, message=Respuesta a comentario, link=null, published=false, from=WebhookPayload.From(id=763079420215588, name=Test - TWS2), reaction_type=null, photos=null))])])
2025-07-31 16:23:14 INFO  c.m.controllers.WebhookController [89] - 📌 Evento recibido: item=comment, verb=add
2025-07-31 16:23:14 INFO  c.m.s.factory.CommentEventoHandler [58] - [ADD] Comentario nuevo: WebhookPayload.Value(item=comment, verb=add, post_id=763079420215588_122098044554954170, comment_id=122098044554954170_1055340836794513, parent_id=122098044554954170_1813847852898835, photo_id=null, created_time=1753996984, updated_time=null, message=Respuesta a comentario, link=null, published=false, from=WebhookPayload.From(id=763079420215588, name=Test - TWS2), reaction_type=null, photos=null)
2025-07-31 16:23:14 INFO  c.m.client.LHIA.service.ApiLhia [52] - Enviando mensaje a LHIA: Respuesta a comentario
2025-07-31 16:23:14 ERROR c.m.c.F.services.APIGraphServiceImp [47] - ❌ Error al intentar obtener comentarios y reacciones del post
org.springframework.web.reactive.function.client.WebClientResponseException$BadRequest: 400 Bad Request from GET https://graph.facebook.com/v23.0/763079420215588_122098044554954170
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:321)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 400 BAD_REQUEST from GET https://graph.facebook.com/v23.0/763079420215588_122098044554954170 [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:321)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-07-31 16:23:20 INFO  c.m.controllers.WebhookController [78] - 📬 Webhook recibido: WebhookPayload(object=page, entry=[WebhookPayload.Entry(id=763079420215588, time=1753996998, changes=[WebhookPayload.Change(field=feed, value=WebhookPayload.Value(item=status, verb=edited, post_id=763079420215588_122098044554954170, comment_id=null, parent_id=null, photo_id=null, created_time=1753129006, updated_time=null, message=lista de imagenes, link=null, published=true, from=WebhookPayload.From(id=763079420215588, name=Test - TWS2), reaction_type=null, photos=[https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/524988216_122105643422954170_2489845722399535436_n.webp?stp=dst-png&_nc_cat=101&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=82ffSMC5fGIQ7kNvwEpy3G9&_nc_oc=AdmLDD-zzFa8hfaHKBN5M-RyDi6lNPLdHd-0oVch8yZbDoZGfvgQtANy5O42iRuG7cs&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=7u2x47twFOCYGILfJet8lQ&oh=00_AfQSskPkmQXaqWj0jDpgDUfWypMrXm_5VYgtukOQ8_hmWQ&oe=6891AD3B, https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/524732206_122105643464954170_77418519675063078_n.jpg?_nc_cat=110&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=a2auUvr3Y0YQ7kNvwHULOBl&_nc_oc=AdlVZ3le-ZVzYyA5yw1dqFIxTOe9bGlFRZHMd3r17er57P6Uz5MGE6rS2X_L8xcUTwY&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=7u2x47twFOCYGILfJet8lQ&oh=00_AfRWw6yiPTfHjQ1sVMFbhtiGUuToseraBDtZtEZjv9thPg&oe=6891B710, https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/515494486_122105655248954170_6661507978208723819_n.jpg?_nc_cat=107&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=HJRVv110dAMQ7kNvwHdNRh9&_nc_oc=AdlREDCS3xJkqsWUY4ovVeCwU0DU07Ydv80Hs-k1v4TeNSicP8wmFTk-OJo9uEvOFkk&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=7u2x47twFOCYGILfJet8lQ&oh=00_AfQReeTh9-kBRSDumHp91VLM51tGjW5ajNxGdtyf2FUrDA&oe=6891C5FD]))])])
2025-07-31 16:23:20 INFO  c.m.controllers.WebhookController [89] - 📌 Evento recibido: item=status, verb=edited
2025-07-31 16:23:20 INFO  c.m.s.factory.PostEventoHandler [23] - [EDITED] Post editado: WebhookPayload.Value(item=status, verb=edited, post_id=763079420215588_122098044554954170, comment_id=null, parent_id=null, photo_id=null, created_time=1753129006, updated_time=null, message=lista de imagenes, link=null, published=true, from=WebhookPayload.From(id=763079420215588, name=Test - TWS2), reaction_type=null, photos=[https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/524988216_122105643422954170_2489845722399535436_n.webp?stp=dst-png&_nc_cat=101&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=82ffSMC5fGIQ7kNvwEpy3G9&_nc_oc=AdmLDD-zzFa8hfaHKBN5M-RyDi6lNPLdHd-0oVch8yZbDoZGfvgQtANy5O42iRuG7cs&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=7u2x47twFOCYGILfJet8lQ&oh=00_AfQSskPkmQXaqWj0jDpgDUfWypMrXm_5VYgtukOQ8_hmWQ&oe=6891AD3B, https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/524732206_122105643464954170_77418519675063078_n.jpg?_nc_cat=110&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=a2auUvr3Y0YQ7kNvwHULOBl&_nc_oc=AdlVZ3le-ZVzYyA5yw1dqFIxTOe9bGlFRZHMd3r17er57P6Uz5MGE6rS2X_L8xcUTwY&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=7u2x47twFOCYGILfJet8lQ&oh=00_AfRWw6yiPTfHjQ1sVMFbhtiGUuToseraBDtZtEZjv9thPg&oe=6891B710, https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/515494486_122105655248954170_6661507978208723819_n.jpg?_nc_cat=107&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=HJRVv110dAMQ7kNvwHdNRh9&_nc_oc=AdlREDCS3xJkqsWUY4ovVeCwU0DU07Ydv80Hs-k1v4TeNSicP8wmFTk-OJo9uEvOFkk&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=7u2x47twFOCYGILfJet8lQ&oh=00_AfQReeTh9-kBRSDumHp91VLM51tGjW5ajNxGdtyf2FUrDA&oe=6891C5FD])
2025-07-31 16:23:25 INFO  c.m.s.factory.CommentEventoHandler [91] - 🧠 Respuesta de LHIA: La Cooperativa de Ahorro y Crédito Gañansol ofrece varios productos que pueden adaptarse a tus necesidades. Aquí te detallo algunos de ellos:

1. **Ahorro Programado**
   - Promueve el ahorro planificado.
   - Frecuencia de ahorro: Semanal, quincenal, o mensual.
   - Plazos mínimos: 6 meses (recreación) y 12 meses (estudio).

2. **Credi Pignoración Consumo**
   - Financia actividades de socios ahorristas a plazo fijo.
   - Monto: Entre $1,000 y $50,000 USD.
   - Plazo de vencimiento del DPF.
   - Garantía: Pignoración.

3. **Credi Inmediato Consumo**
   - Orientado a gastos imprevistos personales.
   - Monto: Hasta $5,000 USD.
   - Plazo: 1 a 36 meses.

4. **Credi Inmediato Micro**
   - Financia gastos imprevistos de actividades productivas.
   - Monto: Desde $100 hasta $5,000 USD.
   - Plazo: 1 a 24 meses.

5. **Certificados de Depósito a Plazo Fijo**
   - Promueve el ahorro con tasas de interés aprobadas.
   - Monto mínimo: $100.
   - Disponibilidad al vencimiento o por precancelación bajo ciertas condiciones.

Si necesitas información adicional sobre alguno de estos productos o requerimientos, no dudes en preguntar.
2025-07-31 16:23:27 INFO  c.m.c.F.services.APIGraphServiceImp [148] - ↪️ Respuesta enviada al comentario: {"id":"122098044554954170_1759964728060012"}
2025-07-31 16:23:27 INFO  c.m.s.factory.CommentEventoHandler [93] - ✅ Comentario enviado a Facebook: {"id":"122098044554954170_1759964728060012"}
2025-07-31 16:23:32 INFO  c.m.controllers.WebhookController [78] - 📬 Webhook recibido: WebhookPayload(object=page, entry=[WebhookPayload.Entry(id=763079420215588, time=1753997010, changes=[WebhookPayload.Change(field=feed, value=WebhookPayload.Value(item=comment, verb=add, post_id=763079420215588_122098044554954170, comment_id=122098044554954170_1759964728060012, parent_id=122098044554954170_1813847852898835, photo_id=null, created_time=1753997004, updated_time=null, message=La Cooperativa de Ahorro y Crédito Gañansol ofrece varios productos que pueden adaptarse a tus necesidades. Aquí te detallo algunos de ellos:

1. **Ahorro Programado**
   - Promueve el ahorro planificado.
   - Frecuencia de ahorro: Semanal, quincenal, o mensual.
   - Plazos mínimos: 6 meses (recreación) y 12 meses (estudio).

2. **Credi Pignoración Consumo**
   - Financia actividades de socios ahorristas a plazo fijo.
   - Monto: Entre $1,000 y $50,000 USD.
   - Plazo de vencimiento del DPF.
   - Garantía: Pignoración.

3. **Credi Inmediato Consumo**
   - Orientado a gastos imprevistos personales.
   - Monto: Hasta $5,000 USD.
   - Plazo: 1 a 36 meses.

4. **Credi Inmediato Micro**
   - Financia gastos imprevistos de actividades productivas.
   - Monto: Desde $100 hasta $5,000 USD.
   - Plazo: 1 a 24 meses.

5. **Certificados de Depósito a Plazo Fijo**
   - Promueve el ahorro con tasas de interés aprobadas.
   - Monto mínimo: $100.
   - Disponibilidad al vencimiento o por precancelación bajo ciertas condiciones.

Si necesitas información adicional sobre alguno de estos productos o requerimientos, no dudes en preguntar., link=null, published=false, from=WebhookPayload.From(id=1699940356976238, name=Consola Retro), reaction_type=null, photos=null))])])
2025-07-31 16:23:32 INFO  c.m.controllers.WebhookController [89] - 📌 Evento recibido: item=comment, verb=add
2025-07-31 16:23:32 ERROR c.m.c.F.services.APIGraphServiceImp [47] - ❌ Error al intentar obtener comentarios y reacciones del post
org.springframework.web.reactive.function.client.WebClientResponseException$BadRequest: 400 Bad Request from GET https://graph.facebook.com/v23.0/763079420215588_122098044554954170
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:321)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 400 BAD_REQUEST from GET https://graph.facebook.com/v23.0/763079420215588_122098044554954170 [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:321)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-07-31 16:24:18 INFO  c.m.controllers.WebhookController [78] - 📬 Webhook recibido: WebhookPayload(object=page, entry=[WebhookPayload.Entry(id=763079420215588, time=1753997056, changes=[WebhookPayload.Change(field=feed, value=WebhookPayload.Value(item=comment, verb=add, post_id=763079420215588_122098044554954170, comment_id=122098044554954170_1078780250988184, parent_id=122098044554954170_1813847852898835, photo_id=null, created_time=1753997051, updated_time=null, message=Respuesta a comentario, link=null, published=false, from=WebhookPayload.From(id=763079420215588, name=Test - TWS2), reaction_type=null, photos=null))])])
2025-07-31 16:24:18 INFO  c.m.controllers.WebhookController [89] - 📌 Evento recibido: item=comment, verb=add
2025-07-31 16:24:18 INFO  c.m.s.factory.CommentEventoHandler [58] - [ADD] Comentario nuevo: WebhookPayload.Value(item=comment, verb=add, post_id=763079420215588_122098044554954170, comment_id=122098044554954170_1078780250988184, parent_id=122098044554954170_1813847852898835, photo_id=null, created_time=1753997051, updated_time=null, message=Respuesta a comentario, link=null, published=false, from=WebhookPayload.From(id=763079420215588, name=Test - TWS2), reaction_type=null, photos=null)
2025-07-31 16:24:18 INFO  c.m.client.LHIA.service.ApiLhia [52] - Enviando mensaje a LHIA: Respuesta a comentario
2025-07-31 16:24:18 ERROR c.m.c.F.services.APIGraphServiceImp [47] - ❌ Error al intentar obtener comentarios y reacciones del post
org.springframework.web.reactive.function.client.WebClientResponseException$BadRequest: 400 Bad Request from GET https://graph.facebook.com/v23.0/763079420215588_122098044554954170
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:321)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 400 BAD_REQUEST from GET https://graph.facebook.com/v23.0/763079420215588_122098044554954170 [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:321)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-07-31 16:24:21 INFO  c.m.controllers.WebhookController [78] - 📬 Webhook recibido: WebhookPayload(object=page, entry=[WebhookPayload.Entry(id=763079420215588, time=1753997059, changes=[WebhookPayload.Change(field=feed, value=WebhookPayload.Value(item=status, verb=edited, post_id=763079420215588_122098044554954170, comment_id=null, parent_id=null, photo_id=null, created_time=1753129006, updated_time=null, message=lista de imagenes, link=null, published=true, from=WebhookPayload.From(id=763079420215588, name=Test - TWS2), reaction_type=null, photos=[https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/524988216_122105643422954170_2489845722399535436_n.webp?stp=dst-png&_nc_cat=101&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=82ffSMC5fGIQ7kNvwEpy3G9&_nc_oc=AdmLDD-zzFa8hfaHKBN5M-RyDi6lNPLdHd-0oVch8yZbDoZGfvgQtANy5O42iRuG7cs&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=J43kSOHg0fpyVAgDrfzHpA&oh=00_AfRoO3uUym2f57i5jflZE2kIC9Bo38TU2U8kWarLj9dcdQ&oe=6891AD3B, https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/524732206_122105643464954170_77418519675063078_n.jpg?_nc_cat=110&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=a2auUvr3Y0YQ7kNvwHULOBl&_nc_oc=AdlVZ3le-ZVzYyA5yw1dqFIxTOe9bGlFRZHMd3r17er57P6Uz5MGE6rS2X_L8xcUTwY&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=J43kSOHg0fpyVAgDrfzHpA&oh=00_AfSrNOueaV62Ov1pIknzgKksaZsoT6OzVPRqVqfjC31UMw&oe=6891B710, https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/515494486_122105655248954170_6661507978208723819_n.jpg?_nc_cat=107&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=HJRVv110dAMQ7kNvwHdNRh9&_nc_oc=AdlREDCS3xJkqsWUY4ovVeCwU0DU07Ydv80Hs-k1v4TeNSicP8wmFTk-OJo9uEvOFkk&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=J43kSOHg0fpyVAgDrfzHpA&oh=00_AfQ2t0_MlKD11MQJ0OSfKBpnWnftZPu9lynEXVeyCjvENA&oe=6891C5FD]))])])
2025-07-31 16:24:21 INFO  c.m.controllers.WebhookController [89] - 📌 Evento recibido: item=status, verb=edited
2025-07-31 16:24:21 INFO  c.m.s.factory.PostEventoHandler [23] - [EDITED] Post editado: WebhookPayload.Value(item=status, verb=edited, post_id=763079420215588_122098044554954170, comment_id=null, parent_id=null, photo_id=null, created_time=1753129006, updated_time=null, message=lista de imagenes, link=null, published=true, from=WebhookPayload.From(id=763079420215588, name=Test - TWS2), reaction_type=null, photos=[https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/524988216_122105643422954170_2489845722399535436_n.webp?stp=dst-png&_nc_cat=101&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=82ffSMC5fGIQ7kNvwEpy3G9&_nc_oc=AdmLDD-zzFa8hfaHKBN5M-RyDi6lNPLdHd-0oVch8yZbDoZGfvgQtANy5O42iRuG7cs&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=J43kSOHg0fpyVAgDrfzHpA&oh=00_AfRoO3uUym2f57i5jflZE2kIC9Bo38TU2U8kWarLj9dcdQ&oe=6891AD3B, https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/524732206_122105643464954170_77418519675063078_n.jpg?_nc_cat=110&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=a2auUvr3Y0YQ7kNvwHULOBl&_nc_oc=AdlVZ3le-ZVzYyA5yw1dqFIxTOe9bGlFRZHMd3r17er57P6Uz5MGE6rS2X_L8xcUTwY&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=J43kSOHg0fpyVAgDrfzHpA&oh=00_AfSrNOueaV62Ov1pIknzgKksaZsoT6OzVPRqVqfjC31UMw&oe=6891B710, https://scontent.fcue3-1.fna.fbcdn.net/v/t39.30808-6/515494486_122105655248954170_6661507978208723819_n.jpg?_nc_cat=107&ccb=1-7&_nc_sid=e5c1b6&_nc_ohc=HJRVv110dAMQ7kNvwHdNRh9&_nc_oc=AdlREDCS3xJkqsWUY4ovVeCwU0DU07Ydv80Hs-k1v4TeNSicP8wmFTk-OJo9uEvOFkk&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.fcue3-1.fna&_nc_gid=J43kSOHg0fpyVAgDrfzHpA&oh=00_AfQ2t0_MlKD11MQJ0OSfKBpnWnftZPu9lynEXVeyCjvENA&oe=6891C5FD])
2025-07-31 16:24:22 INFO  c.m.s.factory.CommentEventoHandler [91] - 🧠 Respuesta de LHIA: Lo siento, no cuento con esa información. Si deseas, puedo proporcionarte más detalles sobre los productos y servicios de la Cooperativa de Ahorro y Crédito Gañansol.
2025-07-31 16:24:24 INFO  c.m.c.F.services.APIGraphServiceImp [148] - ↪️ Respuesta enviada al comentario: {"id":"122098044554954170_1750538608898670"}
2025-07-31 16:24:24 INFO  c.m.s.factory.CommentEventoHandler [93] - ✅ Comentario enviado a Facebook: {"id":"122098044554954170_1750538608898670"}
2025-07-31 16:24:27 INFO  c.m.controllers.WebhookController [78] - 📬 Webhook recibido: WebhookPayload(object=page, entry=[WebhookPayload.Entry(id=763079420215588, time=1753997065, changes=[WebhookPayload.Change(field=feed, value=WebhookPayload.Value(item=comment, verb=add, post_id=763079420215588_122098044554954170, comment_id=122098044554954170_1750538608898670, parent_id=122098044554954170_1813847852898835, photo_id=null, created_time=1753997061, updated_time=null, message=Lo siento, no cuento con esa información. Si deseas, puedo proporcionarte más detalles sobre los productos y servicios de la Cooperativa de Ahorro y Crédito Gañansol., link=null, published=false, from=WebhookPayload.From(id=1699940356976238, name=Consola Retro), reaction_type=null, photos=null))])])
2025-07-31 16:24:27 INFO  c.m.controllers.WebhookController [89] - 📌 Evento recibido: item=comment, verb=add
2025-07-31 16:24:27 ERROR c.m.c.F.services.APIGraphServiceImp [47] - ❌ Error al intentar obtener comentarios y reacciones del post
org.springframework.web.reactive.function.client.WebClientResponseException$BadRequest: 400 Bad Request from GET https://graph.facebook.com/v23.0/763079420215588_122098044554954170
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:321)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 400 BAD_REQUEST from GET https://graph.facebook.com/v23.0/763079420215588_122098044554954170 [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:321)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:842)
2025-07-31 16:25:56 INFO  o.s.b.w.e.netty.GracefulShutdown [53] - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-31 16:25:56 INFO  o.s.b.w.e.netty.GracefulShutdown [62] - Graceful shutdown complete
